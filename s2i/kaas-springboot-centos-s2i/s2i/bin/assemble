#!/bin/bash -e
#
# S2I assemble script for the 'kaas-springboot-centos-s2i' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#
export JAVA_HOME=/usr/lib/jvm/java
export MAVEN_HOME=/usr/share/maven

# If the 'kaas-springboot-centos-s2i' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

if [ "$(ls /tmp/artifacts/.m2 2>/dev/null)" ]; then
		echo "---> Restore build artifacts"
    mv /tmp/artifacts/.m2 $HOME
fi

echo "---> Installing application source..."
cd /tmp/src/

if [ -f "pom.xml" ]; then
	echo "---> Building application from source..."
	$MAVEN_HOME/bin/mvn clean package -s $SUBMARINE_HOME/settings.xml -DskipTests
else
	echo "---> Generating project structure..."

	$MAVEN_HOME/bin/mvn archetype:generate -B -DarchetypeGroupId=org.kie -DarchetypeArtifactId=kaas-springboot-archetype -DarchetypeVersion=8.0.0-SNAPSHOT -DgroupId=com.company -DartifactId=project -s $SUBMARINE_HOME/settings.xml

	# copy resources into the generated project
	for item in *
	do
		if [ -d $item ] && [ "$item" == "project" ]; then
			echo "--> Skipping generated project ..."
		else
			echo "--> Coping resource $item"
			cp -R $item project/src/main/resources
		fi
	done

	# move all project content into the current directory
	mv project/* .

	echo "---> Building application from source..."
	$MAVEN_HOME/bin/mvn clean package -s $SUBMARINE_HOME/settings.xml -DskipTests
fi

echo "---> Installing application binaries"
mkdir $SUBMARINE_HOME/bin
cp -v target/*.jar $SUBMARINE_HOME/bin

echo "---> Copy image metadata file..."
mkdir /tmp/.s2i
cp -v target/image_metadata.json /tmp/.s2i/image_metadata.json
cp -v target/image_metadata.json $SUBMARINE_HOME/bin
