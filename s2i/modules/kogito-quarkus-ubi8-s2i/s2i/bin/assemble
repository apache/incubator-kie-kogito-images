#!/bin/bash -e
#
# S2I assemble script for the 'kaas-quarkus-centos-s2i' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#
#############################################
# Configure maven - for a complete list of
# supported values, please refer the module.yaml
# file.
CONFIGURE_SCRIPTS=(
  ${KOGITO_HOME}/.m2/configure-maven.sh
)
source ${KOGITO_HOME}/.m2/configure.sh
#############################################

# If the 'kaas-quarkus-ubi8-s2i' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
    exec /usr/libexec/s2i/usage
fi

if [ "$(ls /tmp/artifacts/.m2 2>/dev/null)" ]; then
    echo "---> Restore build artifacts"
    mv /tmp/artifacts/.m2 $HOME
fi

echo "---> Installing application source..."
cd /tmp/src/

if [ -f "pom.xml" ]; then
    echo "---> Building application from source..."
    $MAVEN_HOME/bin/mvn clean package -Pnative -s $KOGITO_HOME/.m2/settings.xml \
        -DskipTests -Dmaven.javadoc.skip=true -Dmaven.site.skip=true -Dmaven.source.skip=true \
        -Djacoco.skip=true -Dcheckstyle.skip=true -Dfindbugs.skip=true -Dpmd.skip=true -Dfabric8.skip=true
else
    echo "---> Generating project structure..."

    $MAVEN_HOME/bin/mvn archetype:generate -B -DarchetypeGroupId=org.kie -DarchetypeArtifactId=kaas-quarkus-archetype \
	-DarchetypeVersion=8.0.0-SNAPSHOT -DgroupId=com.company -DartifactId=project -s $KOGITO_HOME/.m2/settings.xml

    # copy resources into the generated project
    for item in *
    do
        if [ -d $item ] && [ "$item" == "project" ]; then
            echo "--> Skipping generated project ..."
        else
            echo "--> Coping resource $item"
            cp -R $item project/src/main/resources
        fi
    done

    # move all project content into the current directory
    mv project/* .

    echo "---> Building application from source..."
    $MAVEN_HOME/bin/mvn clean package -Pnative -s $KOGITO_HOME/.m2/settings.xml \
        -DskipTests -Dmaven.javadoc.skip=true -Dmaven.site.skip=true -Dmaven.source.skip=true \
        -Djacoco.skip=true -Dcheckstyle.skip=true -Dfindbugs.skip=true -Dpmd.skip=true -Dfabric8.skip=true

fi

echo "---> Installing application binaries"
cp -v target/*-runner $KOGITO_HOME/bin
chmod +x $KOGITO_HOME/bin/*-runner

echo "---> Copy image metadata file..."
if [ -e /tmp/src/target/image_metadata.json ]; then
    mkdir /tmp/.s2i
    cp -v /tmp/src/target/image_metadata.json /tmp/.s2i
    cp -v /tmp/src/target/image_metadata.json $KOGITO_HOME/bin
else
    echo "-----> Failed to copy metadata file, /tmp/src/target/image_metadata.json not found."
fi

echo "---> Copy native java libraries for ssl handling..."
cp -v $GRAALVM_HOME/jre/lib/amd64/libsunec.so $KOGITO_HOME/bin

