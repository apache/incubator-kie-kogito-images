#!/bin/bash -e
#
# S2I assemble script for the 'kaas-springboot-centos-s2i' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#
#############################################
# Configure maven - for a complete list of
# supported values, please refer the module.yaml
# file.
CONFIGURE_SCRIPTS=(
    ${KOGITO_HOME}/launch/configure-maven.sh
)
source ${KOGITO_HOME}/launch/configure.sh
#############################################

# If the 'kaas-springboot-centos-s2i' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

######################
# incremental builds
manage_incremental_build

echo "---> Installing application source..."
cd /tmp/src/

if [ -f "pom.xml" ]; then
	echo "---> Building application from source..."
	$MAVEN_HOME/bin/mvn clean package $MAVEN_ARGS_APPEND -s $KOGITO_HOME/.m2/settings.xml \
    -Dmaven.test.skip -Dmaven.javadoc.skip=true -Dmaven.site.skip=true -Dmaven.source.skip=true \
    -Djacoco.skip=true -Dcheckstyle.skip=true -Dfindbugs.skip=true -Dpmd.skip=true -Dfabric8.skip=true
else
	echo "---> Generating project structure..."

	$MAVEN_HOME/bin/mvn archetype:generate -B -DarchetypeGroupId=org.kie.kogito \
	-DarchetypeArtifactId=kogito-springboot-archetype -DarchetypeVersion=$KOGITO_VERSION \
	-DgroupId=com.company -DartifactId=project -s $KOGITO_HOME/.m2/settings.xml

	# copy resources into the generated project
	for item in *
	do
		if [ -d $item ] && [ "$item" == "project" ]; then
			echo "--> Skipping generated project ..."
		else
			echo "--> Coping resource $item"
			cp -R "$item" project/src/main/resources
		fi
	done

	# move all project content into the current directory
	mv project/* .

	echo "---> Building application from source..."
	$MAVEN_HOME/bin/mvn clean package $MAVEN_ARGS_APPEND -s $KOGITO_HOME/.m2/settings.xml \
    -Dmaven.test.skip -Dmaven.javadoc.skip=true -Dmaven.site.skip=true -Dmaven.source.skip=true \
    -Djacoco.skip=true -Dcheckstyle.skip=true -Dfindbugs.skip=true -Dpmd.skip=true -Dfabric8.skip=true
fi

artifactDir="target"
if [ ! -z "${ARTIFACT_DIR}" ]; then
    artifactDir="${ARTIFACT_DIR}"
fi

echo "---> Installing application binaries"
cp -v $artifactDir/*.jar $KOGITO_HOME/bin

echo "---> Copy image metadata file..."
if [ -e "/tmp/src/${artifactDir}/image_metadata.json" ]; then
    mkdir /tmp/.s2i
    cp -v /tmp/src/$artifactDir/image_metadata.json /tmp/.s2i
    cp -v /tmp/src/$artifactDir/image_metadata.json $KOGITO_HOME/bin
else
    echo "-----> Failed to copy metadata file, /tmp/src/${artifactDir}/image_metadata.json not found."
fi
